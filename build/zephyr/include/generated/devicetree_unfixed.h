/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   esp32.dts.pre.tmp
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Nodes in dependency order (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /memory@3ffb0000
 *   4   /cpus
 *   5   /cpus/cpu@0
 *   6   /cpus/cpu@1
 *   7   /soc
 *   8   /soc/gpio@3ff44000
 *   9   /soc/gpio@3ff44800
 *   10  /rtc@3ff48000
 *   11  /soc/i2c@3ff53000
 *   12  /soc/i2c@3ff67000
 *   13  /soc/pinmux@3ff49000
 *   14  /soc/trng@3ff75144
 *   15  /soc/uart@3ff40000
 *   16  /soc/uart@3ff50000
 *   17  /soc/uart@3ff6e000
 *   18  /soc/watchdog@3ff5f048
 *   19  /soc/watchdog@3ff60048
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node's generated path identifier: DT_N
 *
 * Dependency Ordinal: 0
 *
 * Supports:
 *   1   /aliases
 *   2   /chosen
 *   4   /cpus
 *   3   /memory@3ffb0000
 *   10  /rtc@3ff48000
 *   7   /soc
 */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_3ffb0000) fn(DT_N_S_rtc_3ff48000)

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_espressif_esp32 DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_espressif_esp32 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"espressif,esp32"}
#define DT_N_P_compatible_IDX_0 "espressif,esp32"
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node's generated path identifier: DT_N_S_aliases
 *
 * Dependency Ordinal: 1
 *
 * Requires:
 *   0   /
 */

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Special property macros: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node's generated path identifier: DT_N_S_chosen
 *
 * Dependency Ordinal: 2
 *
 * Requires:
 *   0   /
 */

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /memory@3ffb0000
 *
 * Node's generated path identifier: DT_N_S_memory_3ffb0000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * Dependency Ordinal: 3
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Generic on-chip SRAM description
 */

/* Node parent (/) identifier: */
#define DT_N_S_memory_3ffb0000_PARENT DT_N
#define DT_N_S_memory_3ffb0000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_memory_3ffb0000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_3ffb0000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_3ffb0000

/* Special property macros: */
#define DT_N_S_memory_3ffb0000_REG_NUM 1
#define DT_N_S_memory_3ffb0000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_3ffb0000_REG_IDX_0_VAL_ADDRESS 1073414144 /* 0x3ffb0000 */
#define DT_N_S_memory_3ffb0000_REG_IDX_0_VAL_SIZE 327680 /* 0x50000 */
#define DT_N_S_memory_3ffb0000_IRQ_NUM 0
#define DT_N_S_memory_3ffb0000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_3ffb0000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_3ffb0000_P_reg {1073414144 /* 0x3ffb0000 */, 327680 /* 0x50000 */}
#define DT_N_S_memory_3ffb0000_P_reg_IDX_0 1073414144
#define DT_N_S_memory_3ffb0000_P_reg_IDX_1 327680
#define DT_N_S_memory_3ffb0000_P_reg_EXISTS 1
#define DT_N_S_memory_3ffb0000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_3ffb0000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_3ffb0000_P_compatible_LEN 1
#define DT_N_S_memory_3ffb0000_P_compatible_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node's generated path identifier: DT_N_S_cpus
 *
 * Dependency Ordinal: 4
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   5   /cpus/cpu@0
 *   6   /cpus/cpu@1
 */

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node's generated path identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = cadence,tensilica-xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/cadence,tensilica-xtensa-lx6.yaml
 *
 * Dependency Ordinal: 5
 *
 * Requires:
 *   4   /cpus
 *
 * Description:
 *   Cadence Tensilica Xtensa LX6 CPU
 */

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_cadence_tensilica_xtensa_lx6 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0                      DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_cadence_tensilica_xtensa_lx6 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_source 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 240
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"cadence,tensilica-xtensa-lx6"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "cadence,tensilica-xtensa-lx6"
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node's generated path identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = cadence,tensilica-xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/cadence,tensilica-xtensa-lx6.yaml
 *
 * Dependency Ordinal: 6
 *
 * Requires:
 *   4   /cpus
 *
 * Description:
 *   Cadence Tensilica Xtensa LX6 CPU
 */

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_1_cadence_tensilica_xtensa_lx6 DT_N_S_cpus_S_cpu_1
#define DT_N_NODELABEL_cpu1                      DT_N_S_cpus_S_cpu_1

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_cadence_tensilica_xtensa_lx6 1
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_clock_source 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency 240
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible {"cadence,tensilica-xtensa-lx6"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "cadence,tensilica-xtensa-lx6"
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node's generated path identifier: DT_N_S_soc
 *
 * Dependency Ordinal: 7
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   8   /soc/gpio@3ff44000
 *   9   /soc/gpio@3ff44800
 *   11  /soc/i2c@3ff53000
 *   12  /soc/i2c@3ff67000
 *   13  /soc/pinmux@3ff49000
 *   14  /soc/trng@3ff75144
 *   15  /soc/uart@3ff40000
 *   16  /soc/uart@3ff50000
 *   17  /soc/uart@3ff6e000
 *   18  /soc/watchdog@3ff5f048
 *   19  /soc/watchdog@3ff60048
 */

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_uart_3ff40000) fn(DT_N_S_soc_S_uart_3ff50000) fn(DT_N_S_soc_S_uart_3ff6e000) fn(DT_N_S_soc_S_pinmux_3ff49000) fn(DT_N_S_soc_S_gpio_3ff44000) fn(DT_N_S_soc_S_gpio_3ff44800) fn(DT_N_S_soc_S_i2c_3ff53000) fn(DT_N_S_soc_S_i2c_3ff67000) fn(DT_N_S_soc_S_trng_3ff75144) fn(DT_N_S_soc_S_watchdog_3ff5f048) fn(DT_N_S_soc_S_watchdog_3ff60048)

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/gpio@3ff44000
 *
 * Node's generated path identifier: DT_N_S_soc_S_gpio_3ff44000
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * Dependency Ordinal: 8
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 GPIO controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_3ff44000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpio_3ff44000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_3ff44000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_gpio DT_N_S_soc_S_gpio_3ff44000
#define DT_N_NODELABEL_gpio0             DT_N_S_soc_S_gpio_3ff44000

/* Special property macros: */
#define DT_N_S_soc_S_gpio_3ff44000_REG_NUM 1
#define DT_N_S_soc_S_gpio_3ff44000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44000_REG_IDX_0_VAL_ADDRESS 1072971776 /* 0x3ff44000 */
#define DT_N_S_soc_S_gpio_3ff44000_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_3ff44000_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_3ff44000_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_3ff44000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_3ff44000_P_reg {1072971776 /* 0x3ff44000 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_3ff44000_P_reg_IDX_0 1072971776
#define DT_N_S_soc_S_gpio_3ff44000_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_3ff44000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44000_P_label "GPIO_0"
#define DT_N_S_soc_S_gpio_3ff44000_P_label_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_3ff44000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44000_P_ngpios 32
#define DT_N_S_soc_S_gpio_3ff44000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44000_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_3ff44000_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_3ff44000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_3ff44000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/gpio@3ff44800
 *
 * Node's generated path identifier: DT_N_S_soc_S_gpio_3ff44800
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * Dependency Ordinal: 9
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 GPIO controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_3ff44800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpio_3ff44800_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_3ff44800_EXISTS 1
#define DT_N_INST_1_espressif_esp32_gpio DT_N_S_soc_S_gpio_3ff44800
#define DT_N_NODELABEL_gpio1             DT_N_S_soc_S_gpio_3ff44800

/* Special property macros: */
#define DT_N_S_soc_S_gpio_3ff44800_REG_NUM 1
#define DT_N_S_soc_S_gpio_3ff44800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44800_REG_IDX_0_VAL_ADDRESS 1072973824 /* 0x3ff44800 */
#define DT_N_S_soc_S_gpio_3ff44800_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_3ff44800_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_3ff44800_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_3ff44800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_3ff44800_P_reg {1072973824 /* 0x3ff44800 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_3ff44800_P_reg_IDX_0 1072973824
#define DT_N_S_soc_S_gpio_3ff44800_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_3ff44800_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44800_P_label "GPIO_1"
#define DT_N_S_soc_S_gpio_3ff44800_P_label_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44800_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_3ff44800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44800_P_ngpios 8
#define DT_N_S_soc_S_gpio_3ff44800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_3ff44800_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_3ff44800_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_3ff44800_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_3ff44800_P_compatible_EXISTS 1

/*
 * Devicetree node: /rtc@3ff48000
 *
 * Node's generated path identifier: DT_N_S_rtc_3ff48000
 *
 * Binding (compatible = espressif,esp32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/clock/espressif,esp32-rtc.yaml
 *
 * Dependency Ordinal: 10
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   11  /soc/i2c@3ff53000
 *   12  /soc/i2c@3ff67000
 *   15  /soc/uart@3ff40000
 *   16  /soc/uart@3ff50000
 *   17  /soc/uart@3ff6e000
 *
 * Description:
 *   ESP32 RTC (Power & Clock Controller Module) Module
 */

/* Node parent (/) identifier: */
#define DT_N_S_rtc_3ff48000_PARENT DT_N
#define DT_N_S_rtc_3ff48000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_rtc_3ff48000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_rtc DT_N_S_rtc_3ff48000
#define DT_N_NODELABEL_rtc              DT_N_S_rtc_3ff48000

/* Special property macros: */
#define DT_N_S_rtc_3ff48000_REG_NUM 1
#define DT_N_S_rtc_3ff48000_REG_IDX_0_EXISTS 1
#define DT_N_S_rtc_3ff48000_REG_IDX_0_VAL_ADDRESS 1072988160 /* 0x3ff48000 */
#define DT_N_S_rtc_3ff48000_REG_IDX_0_VAL_SIZE 216 /* 0xd8 */
#define DT_N_S_rtc_3ff48000_IRQ_NUM 0
#define DT_N_S_rtc_3ff48000_COMPAT_MATCHES_espressif_esp32_rtc 1
#define DT_N_S_rtc_3ff48000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_rtc_3ff48000_P_reg {1072988160 /* 0x3ff48000 */, 216 /* 0xd8 */}
#define DT_N_S_rtc_3ff48000_P_reg_IDX_0 1072988160
#define DT_N_S_rtc_3ff48000_P_reg_IDX_1 216
#define DT_N_S_rtc_3ff48000_P_reg_EXISTS 1
#define DT_N_S_rtc_3ff48000_P_label "RTC"
#define DT_N_S_rtc_3ff48000_P_label_EXISTS 1
#define DT_N_S_rtc_3ff48000_P_xtal_freq 0
#define DT_N_S_rtc_3ff48000_P_xtal_freq_EXISTS 1
#define DT_N_S_rtc_3ff48000_P_xtal_div 0
#define DT_N_S_rtc_3ff48000_P_xtal_div_EXISTS 1
#define DT_N_S_rtc_3ff48000_P_status "ok"
#define DT_N_S_rtc_3ff48000_P_status_ENUM_IDX 0
#define DT_N_S_rtc_3ff48000_P_status_EXISTS 1
#define DT_N_S_rtc_3ff48000_P_compatible {"espressif,esp32-rtc"}
#define DT_N_S_rtc_3ff48000_P_compatible_IDX_0 "espressif,esp32-rtc"
#define DT_N_S_rtc_3ff48000_P_compatible_LEN 1
#define DT_N_S_rtc_3ff48000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff53000
 *
 * Node's generated path identifier: DT_N_S_soc_S_i2c_3ff53000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * Dependency Ordinal: 11
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 I2C
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_3ff53000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_3ff53000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff53000_EXISTS 1
#define DT_N_ALIAS_i2c_0                DT_N_S_soc_S_i2c_3ff53000
#define DT_N_INST_0_espressif_esp32_i2c DT_N_S_soc_S_i2c_3ff53000
#define DT_N_NODELABEL_i2c0             DT_N_S_soc_S_i2c_3ff53000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_VAL_ADDRESS 1073033216 /* 0x3ff53000 */
#define DT_N_S_soc_S_i2c_3ff53000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_3ff53000_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff53000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_3ff53000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff53000_P_reg {1073033216 /* 0x3ff53000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_0 1073033216
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_3ff53000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_pin 21
#define DT_N_S_soc_S_i2c_3ff53000_P_sda_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_pin 22
#define DT_N_S_soc_S_i2c_3ff53000_P_scl_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_3ff53000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_label "I2C_0"
#define DT_N_S_soc_S_i2c_3ff53000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff53000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff53000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_PH DT_N_S_rtc_3ff48000
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_VAL_offset 7
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_3ff53000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2c@3ff67000
 *
 * Node's generated path identifier: DT_N_S_soc_S_i2c_3ff67000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * Dependency Ordinal: 12
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 I2C
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_3ff67000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_3ff67000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_3ff67000_EXISTS 1
#define DT_N_ALIAS_i2c_1                DT_N_S_soc_S_i2c_3ff67000
#define DT_N_INST_1_espressif_esp32_i2c DT_N_S_soc_S_i2c_3ff67000
#define DT_N_NODELABEL_i2c1             DT_N_S_soc_S_i2c_3ff67000

/* Special property macros: */
#define DT_N_S_soc_S_i2c_3ff67000_REG_NUM 1
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_VAL_ADDRESS 1073115136 /* 0x3ff67000 */
#define DT_N_S_soc_S_i2c_3ff67000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_3ff67000_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_3ff67000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_3ff67000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_3ff67000_P_reg {1073115136 /* 0x3ff67000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_0 1073115136
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_3ff67000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_pin 18
#define DT_N_S_soc_S_i2c_3ff67000_P_sda_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_pin 5
#define DT_N_S_soc_S_i2c_3ff67000_P_scl_pin_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_3ff67000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_3ff67000_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status "okay"
#define DT_N_S_soc_S_i2c_3ff67000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_3ff67000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_PH DT_N_S_rtc_3ff48000
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_VAL_offset 18
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_3ff67000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pinmux@3ff49000
 *
 * Node's generated path identifier: DT_N_S_soc_S_pinmux_3ff49000
 *
 * Binding (compatible = espressif,esp32-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/espressif,esp32-pinmux.yaml
 *
 * Dependency Ordinal: 13
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 PINMUX
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pinmux_3ff49000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pinmux_3ff49000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pinmux_3ff49000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_pinmux DT_N_S_soc_S_pinmux_3ff49000
#define DT_N_NODELABEL_pinmux              DT_N_S_soc_S_pinmux_3ff49000

/* Special property macros: */
#define DT_N_S_soc_S_pinmux_3ff49000_REG_NUM 1
#define DT_N_S_soc_S_pinmux_3ff49000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pinmux_3ff49000_REG_IDX_0_VAL_ADDRESS 1072992256 /* 0x3ff49000 */
#define DT_N_S_soc_S_pinmux_3ff49000_REG_IDX_0_VAL_SIZE 148 /* 0x94 */
#define DT_N_S_soc_S_pinmux_3ff49000_IRQ_NUM 0
#define DT_N_S_soc_S_pinmux_3ff49000_COMPAT_MATCHES_espressif_esp32_pinmux 1
#define DT_N_S_soc_S_pinmux_3ff49000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pinmux_3ff49000_P_reg {1072992256 /* 0x3ff49000 */, 148 /* 0x94 */}
#define DT_N_S_soc_S_pinmux_3ff49000_P_reg_IDX_0 1072992256
#define DT_N_S_soc_S_pinmux_3ff49000_P_reg_IDX_1 148
#define DT_N_S_soc_S_pinmux_3ff49000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pinmux_3ff49000_P_compatible {"espressif,esp32-pinmux"}
#define DT_N_S_soc_S_pinmux_3ff49000_P_compatible_IDX_0 "espressif,esp32-pinmux"
#define DT_N_S_soc_S_pinmux_3ff49000_P_compatible_LEN 1
#define DT_N_S_soc_S_pinmux_3ff49000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/trng@3ff75144
 *
 * Node's generated path identifier: DT_N_S_soc_S_trng_3ff75144
 *
 * Binding (compatible = espressif,esp32-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/espressif,esp32-trng.yaml
 *
 * Dependency Ordinal: 14
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   Espressif ESP32 TRNG (True Random Number Generator).
 *
 *   The TRNG uses the noise in the Wi-Fi/BT RF system. When Wi-Fi and BT are
 *   disabled, the random number generator will give out pseudo-random numbers.
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_trng_3ff75144_PARENT DT_N_S_soc
#define DT_N_S_soc_S_trng_3ff75144_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_trng_3ff75144_EXISTS 1
#define DT_N_INST_0_espressif_esp32_trng DT_N_S_soc_S_trng_3ff75144
#define DT_N_NODELABEL_trng0             DT_N_S_soc_S_trng_3ff75144

/* Special property macros: */
#define DT_N_S_soc_S_trng_3ff75144_REG_NUM 1
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_VAL_ADDRESS 1073172804 /* 0x3ff75144 */
#define DT_N_S_soc_S_trng_3ff75144_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_trng_3ff75144_IRQ_NUM 0
#define DT_N_S_soc_S_trng_3ff75144_COMPAT_MATCHES_espressif_esp32_trng 1
#define DT_N_S_soc_S_trng_3ff75144_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_trng_3ff75144_P_reg {1073172804 /* 0x3ff75144 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_0 1073172804
#define DT_N_S_soc_S_trng_3ff75144_P_reg_IDX_1 4
#define DT_N_S_soc_S_trng_3ff75144_P_reg_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_label "TRNG_0"
#define DT_N_S_soc_S_trng_3ff75144_P_label_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_status "okay"
#define DT_N_S_soc_S_trng_3ff75144_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_trng_3ff75144_P_status_EXISTS 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible {"espressif,esp32-trng"}
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_IDX_0 "espressif,esp32-trng"
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_LEN 1
#define DT_N_S_soc_S_trng_3ff75144_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/uart@3ff40000
 *
 * Node's generated path identifier: DT_N_S_soc_S_uart_3ff40000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * Dependency Ordinal: 15
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 UART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff40000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_3ff40000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff40000_EXISTS 1
#define DT_N_ALIAS_uart_0                DT_N_S_soc_S_uart_3ff40000
#define DT_N_INST_0_espressif_esp32_uart DT_N_S_soc_S_uart_3ff40000
#define DT_N_NODELABEL_uart0             DT_N_S_soc_S_uart_3ff40000

/* Special property macros: */
#define DT_N_S_soc_S_uart_3ff40000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_VAL_ADDRESS 1072955392 /* 0x3ff40000 */
#define DT_N_S_soc_S_uart_3ff40000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff40000_IRQ_NUM 0
#define DT_N_S_soc_S_uart_3ff40000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff40000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff40000_P_reg {1072955392 /* 0x3ff40000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_0 1072955392
#define DT_N_S_soc_S_uart_3ff40000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff40000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_tx_pin 1
#define DT_N_S_soc_S_uart_3ff40000_P_tx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_rx_pin 3
#define DT_N_S_soc_S_uart_3ff40000_P_rx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_rts_pin 22
#define DT_N_S_soc_S_uart_3ff40000_P_rts_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_cts_pin 19
#define DT_N_S_soc_S_uart_3ff40000_P_cts_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff40000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_label "UART_0"
#define DT_N_S_soc_S_uart_3ff40000_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_3ff40000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_status "okay"
#define DT_N_S_soc_S_uart_3ff40000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_3ff40000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_PH DT_N_S_rtc_3ff48000
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_VAL_offset 2
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff40000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/uart@3ff50000
 *
 * Node's generated path identifier: DT_N_S_soc_S_uart_3ff50000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * Dependency Ordinal: 16
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 UART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff50000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_3ff50000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff50000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_uart DT_N_S_soc_S_uart_3ff50000
#define DT_N_NODELABEL_uart1             DT_N_S_soc_S_uart_3ff50000

/* Special property macros: */
#define DT_N_S_soc_S_uart_3ff50000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_VAL_ADDRESS 1073020928 /* 0x3ff50000 */
#define DT_N_S_soc_S_uart_3ff50000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff50000_IRQ_NUM 0
#define DT_N_S_soc_S_uart_3ff50000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff50000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff50000_P_reg {1073020928 /* 0x3ff50000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_0 1073020928
#define DT_N_S_soc_S_uart_3ff50000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff50000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_tx_pin 10
#define DT_N_S_soc_S_uart_3ff50000_P_tx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_rx_pin 9
#define DT_N_S_soc_S_uart_3ff50000_P_rx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_rts_pin 11
#define DT_N_S_soc_S_uart_3ff50000_P_rts_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_cts_pin 6
#define DT_N_S_soc_S_uart_3ff50000_P_cts_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff50000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_label "UART_1"
#define DT_N_S_soc_S_uart_3ff50000_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_hw_flow_control 1
#define DT_N_S_soc_S_uart_3ff50000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_status "disabled"
#define DT_N_S_soc_S_uart_3ff50000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_3ff50000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_PH DT_N_S_rtc_3ff48000
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_VAL_offset 5
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff50000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/uart@3ff6e000
 *
 * Node's generated path identifier: DT_N_S_soc_S_uart_3ff6e000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * Dependency Ordinal: 17
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 UART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_3ff6e000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uart_3ff6e000_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_3ff6e000_EXISTS 1
#define DT_N_INST_2_espressif_esp32_uart DT_N_S_soc_S_uart_3ff6e000
#define DT_N_NODELABEL_uart2             DT_N_S_soc_S_uart_3ff6e000

/* Special property macros: */
#define DT_N_S_soc_S_uart_3ff6e000_REG_NUM 1
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_VAL_ADDRESS 1073143808 /* 0x3ff6e000 */
#define DT_N_S_soc_S_uart_3ff6e000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_uart_3ff6e000_IRQ_NUM 0
#define DT_N_S_soc_S_uart_3ff6e000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_3ff6e000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_uart_3ff6e000_P_reg {1073143808 /* 0x3ff6e000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_0 1073143808
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_uart_3ff6e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_tx_pin 17
#define DT_N_S_soc_S_uart_3ff6e000_P_tx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_rx_pin 16
#define DT_N_S_soc_S_uart_3ff6e000_P_rx_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_rts_pin 7
#define DT_N_S_soc_S_uart_3ff6e000_P_rts_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_cts_pin 8
#define DT_N_S_soc_S_uart_3ff6e000_P_cts_pin_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_current_speed 115200
#define DT_N_S_soc_S_uart_3ff6e000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_label "UART_2"
#define DT_N_S_soc_S_uart_3ff6e000_P_label_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_flow_control 1
#define DT_N_S_soc_S_uart_3ff6e000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_status "disabled"
#define DT_N_S_soc_S_uart_3ff6e000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_3ff6e000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_PH DT_N_S_rtc_3ff48000
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_VAL_offset 23
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_3ff6e000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@3ff5f048
 *
 * Node's generated path identifier: DT_N_S_soc_S_watchdog_3ff5f048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * Dependency Ordinal: 18
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 watchdog. ESP32 contains 3x Watchdog timers, 2x Main System Watchdog
 *   Timer (MWDT), 1x RTC Watchdog Timer (RWDT). RWDT is not supported yet.
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_3ff5f048_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_3ff5f048_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_3ff5f048_EXISTS 1
#define DT_N_INST_0_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_3ff5f048
#define DT_N_NODELABEL_wdt0                  DT_N_S_soc_S_watchdog_3ff5f048

/* Special property macros: */
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_VAL_ADDRESS 1073082440 /* 0x3ff5f048 */
#define DT_N_S_soc_S_watchdog_3ff5f048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_3ff5f048_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_3ff5f048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_3ff5f048_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg {1073082440 /* 0x3ff5f048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_0 1073082440
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_3ff5f048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_label "WDT_0"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status "okay"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_3ff5f048_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@3ff60048
 *
 * Node's generated path identifier: DT_N_S_soc_S_watchdog_3ff60048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * Dependency Ordinal: 19
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 watchdog. ESP32 contains 3x Watchdog timers, 2x Main System Watchdog
 *   Timer (MWDT), 1x RTC Watchdog Timer (RWDT). RWDT is not supported yet.
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_3ff60048_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_3ff60048_FOREACH_CHILD(fn) 

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_3ff60048_EXISTS 1
#define DT_N_INST_1_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_3ff60048
#define DT_N_NODELABEL_wdt1                  DT_N_S_soc_S_watchdog_3ff60048

/* Special property macros: */
#define DT_N_S_soc_S_watchdog_3ff60048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_VAL_ADDRESS 1073086536 /* 0x3ff60048 */
#define DT_N_S_soc_S_watchdog_3ff60048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_3ff60048_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_3ff60048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_3ff60048_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg {1073086536 /* 0x3ff60048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_0 1073086536
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_3ff60048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_label "WDT_1"
#define DT_N_S_soc_S_watchdog_3ff60048_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_status "disabled"
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_3ff60048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_3ff60048_P_compatible_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy           DT_N_S_soc_S_trng_3ff75144
#define DT_CHOSEN_zephyr_entropy_EXISTS    1
#define DT_CHOSEN_zephyr_sram              DT_N_S_memory_3ffb0000
#define DT_CHOSEN_zephyr_sram_EXISTS       1
#define DT_CHOSEN_zephyr_console           DT_N_S_soc_S_uart_3ff40000
#define DT_CHOSEN_zephyr_console_EXISTS    1
#define DT_CHOSEN_zephyr_shell_uart        DT_N_S_soc_S_uart_3ff40000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_espressif_esp32 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_uart 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_pinmux 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_gpio 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_i2c 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_trng 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_watchdog 1
#define DT_COMPAT_HAS_OKAY_cadence_tensilica_xtensa_lx6 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_rtc 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_espressif_esp32_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_uart_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_pinmux_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_gpio_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_i2c_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_trng_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_watchdog_NUM_OKAY 1
#define DT_N_INST_cadence_tensilica_xtensa_lx6_NUM_OKAY 2
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_rtc_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_espressif_esp32(fn) fn(0)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_espressif_esp32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_espressif_esp32_pinmux(fn) fn(0)
#define DT_FOREACH_OKAY_INST_espressif_esp32_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_espressif_esp32_i2c(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_espressif_esp32_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_espressif_esp32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_cadence_tensilica_xtensa_lx6(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_espressif_esp32_rtc(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
