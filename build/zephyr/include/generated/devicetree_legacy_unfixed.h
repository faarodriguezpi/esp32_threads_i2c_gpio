/*
 * Generated by gen_legacy_defines.py
 *
 * DTS input file:
 *   esp32.dts.pre.tmp
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Nodes in dependency order (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /memory@3ffb0000
 *   4   /cpus
 *   5   /cpus/cpu@0
 *   6   /cpus/cpu@1
 *   7   /soc
 *   8   /soc/gpio@3ff44000
 *   9   /soc/gpio@3ff44800
 *   10  /rtc@3ff48000
 *   11  /soc/i2c@3ff53000
 *   12  /soc/i2c@3ff67000
 *   13  /soc/pinmux@3ff49000
 *   14  /soc/trng@3ff75144
 *   15  /soc/uart@3ff40000
 *   16  /soc/uart@3ff50000
 *   17  /soc/uart@3ff6e000
 *   18  /soc/watchdog@3ff5f048
 *   19  /soc/watchdog@3ff60048
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by tree-wide information (active compatibles, chosen nodes,
 * etc.).
 */

/*
 * Devicetree node:
 *   /
 *
 * No matching binding.
 *
 * Dependency Ordinal: 0
 *
 * Supports:
 *   1   /aliases
 *   2   /chosen
 *   4   /cpus
 *   3   /memory@3ffb0000
 *   10  /rtc@3ff48000
 *   7   /soc
 */

/*
 * Devicetree node:
 *   /aliases
 *
 * No matching binding.
 *
 * Dependency Ordinal: 1
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /chosen
 *
 * No matching binding.
 *
 * Dependency Ordinal: 2
 *
 * Requires:
 *   0   /
 */

/*
 * Devicetree node:
 *   /memory@3ffb0000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * Dependency Ordinal: 3
 *
 * Requires:
 *   0   /
 *
 * Description:
 *   Generic on-chip SRAM description
 */
#define DT_MMIO_SRAM_3FFB0000_BASE_ADDRESS          0x3ffb0000
#define DT_INST_0_MMIO_SRAM_BASE_ADDRESS            DT_MMIO_SRAM_3FFB0000_BASE_ADDRESS
#define DT_MMIO_SRAM_3FFB0000_SIZE                  327680
#define DT_INST_0_MMIO_SRAM_SIZE                    DT_MMIO_SRAM_3FFB0000_SIZE
#define DT_INST_0_MMIO_SRAM                         1

/*
 * Devicetree node:
 *   /cpus
 *
 * No matching binding.
 *
 * Dependency Ordinal: 4
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   5   /cpus/cpu@0
 *   6   /cpus/cpu@1
 */

/*
 * Devicetree node:
 *   /cpus/cpu@0
 *
 * Binding (compatible = cadence,tensilica-xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/cadence,tensilica-xtensa-lx6.yaml
 *
 * Dependency Ordinal: 5
 *
 * Requires:
 *   4   /cpus
 *
 * Description:
 *   Cadence Tensilica Xtensa LX6 CPU
 */
#define DT_CADENCE_TENSILICA_XTENSA_LX6_0_BASE_ADDRESS 0x0
#define DT_INST_0_CADENCE_TENSILICA_XTENSA_LX6_BASE_ADDRESS DT_CADENCE_TENSILICA_XTENSA_LX6_0_BASE_ADDRESS
/* cpu clock source */
#define DT_CADENCE_TENSILICA_XTENSA_LX6_0_CLOCK_SOURCE 1
#define DT_INST_0_CADENCE_TENSILICA_XTENSA_LX6_CLOCK_SOURCE DT_CADENCE_TENSILICA_XTENSA_LX6_0_CLOCK_SOURCE
/* Clock frequency in Hz */
#define DT_CADENCE_TENSILICA_XTENSA_LX6_0_CLOCK_FREQUENCY 240
#define DT_INST_0_CADENCE_TENSILICA_XTENSA_LX6_CLOCK_FREQUENCY DT_CADENCE_TENSILICA_XTENSA_LX6_0_CLOCK_FREQUENCY
#define DT_INST_0_CADENCE_TENSILICA_XTENSA_LX6      1

/*
 * Devicetree node:
 *   /cpus/cpu@1
 *
 * Binding (compatible = cadence,tensilica-xtensa-lx6):
 *   $ZEPHYR_BASE/dts/bindings/cpu/cadence,tensilica-xtensa-lx6.yaml
 *
 * Dependency Ordinal: 6
 *
 * Requires:
 *   4   /cpus
 *
 * Description:
 *   Cadence Tensilica Xtensa LX6 CPU
 */
#define DT_CADENCE_TENSILICA_XTENSA_LX6_1_BASE_ADDRESS 0x1
#define DT_INST_1_CADENCE_TENSILICA_XTENSA_LX6_BASE_ADDRESS DT_CADENCE_TENSILICA_XTENSA_LX6_1_BASE_ADDRESS
/* cpu clock source */
#define DT_CADENCE_TENSILICA_XTENSA_LX6_1_CLOCK_SOURCE 1
#define DT_INST_1_CADENCE_TENSILICA_XTENSA_LX6_CLOCK_SOURCE DT_CADENCE_TENSILICA_XTENSA_LX6_1_CLOCK_SOURCE
/* Clock frequency in Hz */
#define DT_CADENCE_TENSILICA_XTENSA_LX6_1_CLOCK_FREQUENCY 240
#define DT_INST_1_CADENCE_TENSILICA_XTENSA_LX6_CLOCK_FREQUENCY DT_CADENCE_TENSILICA_XTENSA_LX6_1_CLOCK_FREQUENCY
#define DT_INST_1_CADENCE_TENSILICA_XTENSA_LX6      1

/*
 * Devicetree node:
 *   /soc
 *
 * No matching binding.
 *
 * Dependency Ordinal: 7
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   8   /soc/gpio@3ff44000
 *   9   /soc/gpio@3ff44800
 *   11  /soc/i2c@3ff53000
 *   12  /soc/i2c@3ff67000
 *   13  /soc/pinmux@3ff49000
 *   14  /soc/trng@3ff75144
 *   15  /soc/uart@3ff40000
 *   16  /soc/uart@3ff50000
 *   17  /soc/uart@3ff6e000
 *   18  /soc/watchdog@3ff5f048
 *   19  /soc/watchdog@3ff60048
 */

/*
 * Devicetree node:
 *   /soc/gpio@3ff44000
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * Dependency Ordinal: 8
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 GPIO controller
 */
#define DT_ESPRESSIF_ESP32_GPIO_3FF44000_BASE_ADDRESS 0x3ff44000
#define DT_INST_0_ESPRESSIF_ESP32_GPIO_BASE_ADDRESS DT_ESPRESSIF_ESP32_GPIO_3FF44000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_GPIO_3FF44000_SIZE       2048
#define DT_INST_0_ESPRESSIF_ESP32_GPIO_SIZE         DT_ESPRESSIF_ESP32_GPIO_3FF44000_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_GPIO_3FF44000_LABEL      "GPIO_0"
#define DT_INST_0_ESPRESSIF_ESP32_GPIO_LABEL        DT_ESPRESSIF_ESP32_GPIO_3FF44000_LABEL
/* Number of gpios supported */
#define DT_ESPRESSIF_ESP32_GPIO_3FF44000_NGPIOS     32
#define DT_INST_0_ESPRESSIF_ESP32_GPIO_NGPIOS       DT_ESPRESSIF_ESP32_GPIO_3FF44000_NGPIOS
#define DT_INST_0_ESPRESSIF_ESP32_GPIO              1

/*
 * Devicetree node:
 *   /soc/gpio@3ff44800
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * Dependency Ordinal: 9
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 GPIO controller
 */
#define DT_ESPRESSIF_ESP32_GPIO_3FF44800_BASE_ADDRESS 0x3ff44800
#define DT_INST_1_ESPRESSIF_ESP32_GPIO_BASE_ADDRESS DT_ESPRESSIF_ESP32_GPIO_3FF44800_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_GPIO_3FF44800_SIZE       2048
#define DT_INST_1_ESPRESSIF_ESP32_GPIO_SIZE         DT_ESPRESSIF_ESP32_GPIO_3FF44800_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_GPIO_3FF44800_LABEL      "GPIO_1"
#define DT_INST_1_ESPRESSIF_ESP32_GPIO_LABEL        DT_ESPRESSIF_ESP32_GPIO_3FF44800_LABEL
/* Number of gpios supported */
#define DT_ESPRESSIF_ESP32_GPIO_3FF44800_NGPIOS     8
#define DT_INST_1_ESPRESSIF_ESP32_GPIO_NGPIOS       DT_ESPRESSIF_ESP32_GPIO_3FF44800_NGPIOS
#define DT_INST_1_ESPRESSIF_ESP32_GPIO              1

/*
 * Devicetree node:
 *   /rtc@3ff48000
 *
 * Binding (compatible = espressif,esp32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/clock/espressif,esp32-rtc.yaml
 *
 * Dependency Ordinal: 10
 *
 * Requires:
 *   0   /
 *
 * Supports:
 *   11  /soc/i2c@3ff53000
 *   12  /soc/i2c@3ff67000
 *   15  /soc/uart@3ff40000
 *   16  /soc/uart@3ff50000
 *   17  /soc/uart@3ff6e000
 *
 * Description:
 *   ESP32 RTC (Power & Clock Controller Module) Module
 */
#define DT_ESPRESSIF_ESP32_RTC_3FF48000_BASE_ADDRESS 0x3ff48000
#define DT_INST_0_ESPRESSIF_ESP32_RTC_BASE_ADDRESS  DT_ESPRESSIF_ESP32_RTC_3FF48000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_RTC_3FF48000_SIZE        216
#define DT_INST_0_ESPRESSIF_ESP32_RTC_SIZE          DT_ESPRESSIF_ESP32_RTC_3FF48000_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_RTC_3FF48000_LABEL       "RTC"
#define DT_INST_0_ESPRESSIF_ESP32_RTC_LABEL         DT_ESPRESSIF_ESP32_RTC_3FF48000_LABEL
/* Value of the extrernal XTAL connected to ESP32, Supported values 40M,26M */
#define DT_ESPRESSIF_ESP32_RTC_3FF48000_XTAL_FREQ   0
#define DT_INST_0_ESPRESSIF_ESP32_RTC_XTAL_FREQ     DT_ESPRESSIF_ESP32_RTC_3FF48000_XTAL_FREQ
/* Divisor value for XTAL Clock, CPU_CLK = XTAL_FREQ / xtal-div */
#define DT_ESPRESSIF_ESP32_RTC_3FF48000_XTAL_DIV    0
#define DT_INST_0_ESPRESSIF_ESP32_RTC_XTAL_DIV      DT_ESPRESSIF_ESP32_RTC_3FF48000_XTAL_DIV
#define DT_INST_0_ESPRESSIF_ESP32_RTC               1

/*
 * Devicetree node:
 *   /soc/i2c@3ff53000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * Dependency Ordinal: 11
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 I2C
 */
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_BASE_ADDRESS 0x3ff53000
#define DT_ALIAS_I2C_0_BASE_ADDRESS                 DT_ESPRESSIF_ESP32_I2C_3FF53000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_BASE_ADDRESS   DT_ESPRESSIF_ESP32_I2C_3FF53000_BASE_ADDRESS
#define DT_INST_0_ESPRESSIF_ESP32_I2C_BASE_ADDRESS  DT_ESPRESSIF_ESP32_I2C_3FF53000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_SIZE        4096
#define DT_ALIAS_I2C_0_SIZE                         DT_ESPRESSIF_ESP32_I2C_3FF53000_SIZE
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_SIZE           DT_ESPRESSIF_ESP32_I2C_3FF53000_SIZE
#define DT_INST_0_ESPRESSIF_ESP32_I2C_SIZE          DT_ESPRESSIF_ESP32_I2C_3FF53000_SIZE
/* SDA pin */
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_SDA_PIN     21
#define DT_ALIAS_I2C_0_SDA_PIN                      DT_ESPRESSIF_ESP32_I2C_3FF53000_SDA_PIN
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_SDA_PIN        DT_ESPRESSIF_ESP32_I2C_3FF53000_SDA_PIN
#define DT_INST_0_ESPRESSIF_ESP32_I2C_SDA_PIN       DT_ESPRESSIF_ESP32_I2C_3FF53000_SDA_PIN
/* SCL pin */
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_SCL_PIN     22
#define DT_ALIAS_I2C_0_SCL_PIN                      DT_ESPRESSIF_ESP32_I2C_3FF53000_SCL_PIN
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_SCL_PIN        DT_ESPRESSIF_ESP32_I2C_3FF53000_SCL_PIN
#define DT_INST_0_ESPRESSIF_ESP32_I2C_SCL_PIN       DT_ESPRESSIF_ESP32_I2C_3FF53000_SCL_PIN
/* Initial clock frequency in Hz */
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_FREQUENCY 400000
#define DT_ALIAS_I2C_0_CLOCK_FREQUENCY              DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_FREQUENCY
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_CLOCK_FREQUENCY DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_FREQUENCY
#define DT_INST_0_ESPRESSIF_ESP32_I2C_CLOCK_FREQUENCY DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_FREQUENCY
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_LABEL       "I2C_0"
#define DT_ALIAS_I2C_0_LABEL                        DT_ESPRESSIF_ESP32_I2C_3FF53000_LABEL
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_LABEL          DT_ESPRESSIF_ESP32_I2C_3FF53000_LABEL
#define DT_INST_0_ESPRESSIF_ESP32_I2C_LABEL         DT_ESPRESSIF_ESP32_I2C_3FF53000_LABEL
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_CONTROLLER "RTC"
#define DT_ALIAS_I2C_0_CLOCK_CONTROLLER             DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_CONTROLLER
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_CLOCK_CONTROLLER DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_CONTROLLER
#define DT_INST_0_ESPRESSIF_ESP32_I2C_CLOCK_CONTROLLER DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_CONTROLLER
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0 7
#define DT_ALIAS_I2C_0_CLOCK_OFFSET_0               DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_CLOCK_OFFSET_0 DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0
#define DT_INST_0_ESPRESSIF_ESP32_I2C_CLOCK_OFFSET_0 DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0
#define DT_ALIAS_I2C_0_CLOCK_OFFSET                 DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_I2C_I2C_0_CLOCK_OFFSET   DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0
#define DT_INST_0_ESPRESSIF_ESP32_I2C_CLOCK_OFFSET  DT_ESPRESSIF_ESP32_I2C_3FF53000_CLOCK_OFFSET_0
#define DT_INST_0_ESPRESSIF_ESP32_I2C               1

/*
 * Devicetree node:
 *   /soc/i2c@3ff67000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * Dependency Ordinal: 12
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 I2C
 */
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_BASE_ADDRESS 0x3ff67000
#define DT_ALIAS_I2C_1_BASE_ADDRESS                 DT_ESPRESSIF_ESP32_I2C_3FF67000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_BASE_ADDRESS   DT_ESPRESSIF_ESP32_I2C_3FF67000_BASE_ADDRESS
#define DT_INST_1_ESPRESSIF_ESP32_I2C_BASE_ADDRESS  DT_ESPRESSIF_ESP32_I2C_3FF67000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_SIZE        4096
#define DT_ALIAS_I2C_1_SIZE                         DT_ESPRESSIF_ESP32_I2C_3FF67000_SIZE
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_SIZE           DT_ESPRESSIF_ESP32_I2C_3FF67000_SIZE
#define DT_INST_1_ESPRESSIF_ESP32_I2C_SIZE          DT_ESPRESSIF_ESP32_I2C_3FF67000_SIZE
/* SDA pin */
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_SDA_PIN     18
#define DT_ALIAS_I2C_1_SDA_PIN                      DT_ESPRESSIF_ESP32_I2C_3FF67000_SDA_PIN
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_SDA_PIN        DT_ESPRESSIF_ESP32_I2C_3FF67000_SDA_PIN
#define DT_INST_1_ESPRESSIF_ESP32_I2C_SDA_PIN       DT_ESPRESSIF_ESP32_I2C_3FF67000_SDA_PIN
/* SCL pin */
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_SCL_PIN     5
#define DT_ALIAS_I2C_1_SCL_PIN                      DT_ESPRESSIF_ESP32_I2C_3FF67000_SCL_PIN
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_SCL_PIN        DT_ESPRESSIF_ESP32_I2C_3FF67000_SCL_PIN
#define DT_INST_1_ESPRESSIF_ESP32_I2C_SCL_PIN       DT_ESPRESSIF_ESP32_I2C_3FF67000_SCL_PIN
/* Initial clock frequency in Hz */
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_FREQUENCY 400000
#define DT_ALIAS_I2C_1_CLOCK_FREQUENCY              DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_FREQUENCY
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_CLOCK_FREQUENCY DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_FREQUENCY
#define DT_INST_1_ESPRESSIF_ESP32_I2C_CLOCK_FREQUENCY DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_FREQUENCY
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_LABEL       "I2C_1"
#define DT_ALIAS_I2C_1_LABEL                        DT_ESPRESSIF_ESP32_I2C_3FF67000_LABEL
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_LABEL          DT_ESPRESSIF_ESP32_I2C_3FF67000_LABEL
#define DT_INST_1_ESPRESSIF_ESP32_I2C_LABEL         DT_ESPRESSIF_ESP32_I2C_3FF67000_LABEL
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_CONTROLLER "RTC"
#define DT_ALIAS_I2C_1_CLOCK_CONTROLLER             DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_CONTROLLER
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_CLOCK_CONTROLLER DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_CONTROLLER
#define DT_INST_1_ESPRESSIF_ESP32_I2C_CLOCK_CONTROLLER DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_CONTROLLER
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0 18
#define DT_ALIAS_I2C_1_CLOCK_OFFSET_0               DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_CLOCK_OFFSET_0 DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0
#define DT_INST_1_ESPRESSIF_ESP32_I2C_CLOCK_OFFSET_0 DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0
#define DT_ALIAS_I2C_1_CLOCK_OFFSET                 DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_I2C_I2C_1_CLOCK_OFFSET   DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0
#define DT_INST_1_ESPRESSIF_ESP32_I2C_CLOCK_OFFSET  DT_ESPRESSIF_ESP32_I2C_3FF67000_CLOCK_OFFSET_0
#define DT_INST_1_ESPRESSIF_ESP32_I2C               1

/*
 * Devicetree node:
 *   /soc/pinmux@3ff49000
 *
 * Binding (compatible = espressif,esp32-pinmux):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/espressif,esp32-pinmux.yaml
 *
 * Dependency Ordinal: 13
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 PINMUX
 */
#define DT_ESPRESSIF_ESP32_PINMUX_3FF49000_BASE_ADDRESS 0x3ff49000
#define DT_INST_0_ESPRESSIF_ESP32_PINMUX_BASE_ADDRESS DT_ESPRESSIF_ESP32_PINMUX_3FF49000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_PINMUX_3FF49000_SIZE     148
#define DT_INST_0_ESPRESSIF_ESP32_PINMUX_SIZE       DT_ESPRESSIF_ESP32_PINMUX_3FF49000_SIZE
#define DT_INST_0_ESPRESSIF_ESP32_PINMUX            1

/*
 * Devicetree node:
 *   /soc/trng@3ff75144
 *
 * Binding (compatible = espressif,esp32-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/espressif,esp32-trng.yaml
 *
 * Dependency Ordinal: 14
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   Espressif ESP32 TRNG (True Random Number Generator).
 *
 *   The TRNG uses the noise in the Wi-Fi/BT RF system. When Wi-Fi and BT are
 *   disabled, the random number generator will give out pseudo-random numbers.
 */
#define DT_ESPRESSIF_ESP32_TRNG_3FF75144_BASE_ADDRESS 0x3ff75144
#define DT_INST_0_ESPRESSIF_ESP32_TRNG_BASE_ADDRESS DT_ESPRESSIF_ESP32_TRNG_3FF75144_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_TRNG_3FF75144_SIZE       4
#define DT_INST_0_ESPRESSIF_ESP32_TRNG_SIZE         DT_ESPRESSIF_ESP32_TRNG_3FF75144_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_TRNG_3FF75144_LABEL      "TRNG_0"
#define DT_INST_0_ESPRESSIF_ESP32_TRNG_LABEL        DT_ESPRESSIF_ESP32_TRNG_3FF75144_LABEL
#define DT_INST_0_ESPRESSIF_ESP32_TRNG              1

/*
 * Devicetree node:
 *   /soc/uart@3ff40000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * Dependency Ordinal: 15
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 UART
 */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_BASE_ADDRESS 0x3ff40000
#define DT_ALIAS_UART_0_BASE_ADDRESS                DT_ESPRESSIF_ESP32_UART_3FF40000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_UART_UART_0_BASE_ADDRESS DT_ESPRESSIF_ESP32_UART_3FF40000_BASE_ADDRESS
#define DT_INST_0_ESPRESSIF_ESP32_UART_BASE_ADDRESS DT_ESPRESSIF_ESP32_UART_3FF40000_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_UART_3FF40000_SIZE       1024
#define DT_ALIAS_UART_0_SIZE                        DT_ESPRESSIF_ESP32_UART_3FF40000_SIZE
#define DT_ESPRESSIF_ESP32_UART_UART_0_SIZE         DT_ESPRESSIF_ESP32_UART_3FF40000_SIZE
#define DT_INST_0_ESPRESSIF_ESP32_UART_SIZE         DT_ESPRESSIF_ESP32_UART_3FF40000_SIZE
/* TX pin */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_TX_PIN     1
#define DT_ALIAS_UART_0_TX_PIN                      DT_ESPRESSIF_ESP32_UART_3FF40000_TX_PIN
#define DT_ESPRESSIF_ESP32_UART_UART_0_TX_PIN       DT_ESPRESSIF_ESP32_UART_3FF40000_TX_PIN
#define DT_INST_0_ESPRESSIF_ESP32_UART_TX_PIN       DT_ESPRESSIF_ESP32_UART_3FF40000_TX_PIN
/* RX pin */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_RX_PIN     3
#define DT_ALIAS_UART_0_RX_PIN                      DT_ESPRESSIF_ESP32_UART_3FF40000_RX_PIN
#define DT_ESPRESSIF_ESP32_UART_UART_0_RX_PIN       DT_ESPRESSIF_ESP32_UART_3FF40000_RX_PIN
#define DT_INST_0_ESPRESSIF_ESP32_UART_RX_PIN       DT_ESPRESSIF_ESP32_UART_3FF40000_RX_PIN
/* RTS pin */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_RTS_PIN    22
#define DT_ALIAS_UART_0_RTS_PIN                     DT_ESPRESSIF_ESP32_UART_3FF40000_RTS_PIN
#define DT_ESPRESSIF_ESP32_UART_UART_0_RTS_PIN      DT_ESPRESSIF_ESP32_UART_3FF40000_RTS_PIN
#define DT_INST_0_ESPRESSIF_ESP32_UART_RTS_PIN      DT_ESPRESSIF_ESP32_UART_3FF40000_RTS_PIN
/* CTS pin */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_CTS_PIN    19
#define DT_ALIAS_UART_0_CTS_PIN                     DT_ESPRESSIF_ESP32_UART_3FF40000_CTS_PIN
#define DT_ESPRESSIF_ESP32_UART_UART_0_CTS_PIN      DT_ESPRESSIF_ESP32_UART_3FF40000_CTS_PIN
#define DT_INST_0_ESPRESSIF_ESP32_UART_CTS_PIN      DT_ESPRESSIF_ESP32_UART_3FF40000_CTS_PIN
/* Initial baud rate setting for UART */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_CURRENT_SPEED 115200
#define DT_ALIAS_UART_0_CURRENT_SPEED               DT_ESPRESSIF_ESP32_UART_3FF40000_CURRENT_SPEED
#define DT_ESPRESSIF_ESP32_UART_UART_0_CURRENT_SPEED DT_ESPRESSIF_ESP32_UART_3FF40000_CURRENT_SPEED
#define DT_INST_0_ESPRESSIF_ESP32_UART_CURRENT_SPEED DT_ESPRESSIF_ESP32_UART_3FF40000_CURRENT_SPEED
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_LABEL      "UART_0"
#define DT_ALIAS_UART_0_LABEL                       DT_ESPRESSIF_ESP32_UART_3FF40000_LABEL
#define DT_ESPRESSIF_ESP32_UART_UART_0_LABEL        DT_ESPRESSIF_ESP32_UART_3FF40000_LABEL
#define DT_INST_0_ESPRESSIF_ESP32_UART_LABEL        DT_ESPRESSIF_ESP32_UART_3FF40000_LABEL
/* Set to enable RTS/CTS flow control at boot time */
#define DT_ESPRESSIF_ESP32_UART_3FF40000_HW_FLOW_CONTROL 0
#define DT_ALIAS_UART_0_HW_FLOW_CONTROL             DT_ESPRESSIF_ESP32_UART_3FF40000_HW_FLOW_CONTROL
#define DT_ESPRESSIF_ESP32_UART_UART_0_HW_FLOW_CONTROL DT_ESPRESSIF_ESP32_UART_3FF40000_HW_FLOW_CONTROL
#define DT_INST_0_ESPRESSIF_ESP32_UART_HW_FLOW_CONTROL DT_ESPRESSIF_ESP32_UART_3FF40000_HW_FLOW_CONTROL
#define DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_CONTROLLER "RTC"
#define DT_ALIAS_UART_0_CLOCK_CONTROLLER            DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_CONTROLLER
#define DT_ESPRESSIF_ESP32_UART_UART_0_CLOCK_CONTROLLER DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_CONTROLLER
#define DT_INST_0_ESPRESSIF_ESP32_UART_CLOCK_CONTROLLER DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_CONTROLLER
#define DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0 2
#define DT_ALIAS_UART_0_CLOCK_OFFSET_0              DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_UART_UART_0_CLOCK_OFFSET_0 DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0
#define DT_INST_0_ESPRESSIF_ESP32_UART_CLOCK_OFFSET_0 DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0
#define DT_ALIAS_UART_0_CLOCK_OFFSET                DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0
#define DT_ESPRESSIF_ESP32_UART_UART_0_CLOCK_OFFSET DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0
#define DT_INST_0_ESPRESSIF_ESP32_UART_CLOCK_OFFSET DT_ESPRESSIF_ESP32_UART_3FF40000_CLOCK_OFFSET_0
#define DT_INST_0_ESPRESSIF_ESP32_UART              1

/*
 * Devicetree node:
 *   /soc/uart@3ff50000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * Dependency Ordinal: 16
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 UART
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/uart@3ff6e000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * Dependency Ordinal: 17
 *
 * Requires:
 *   10  /rtc@3ff48000
 *   7   /soc
 *
 * Description:
 *   ESP32 UART
 *
 * Node is disabled.
 */

/*
 * Devicetree node:
 *   /soc/watchdog@3ff5f048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * Dependency Ordinal: 18
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 watchdog. ESP32 contains 3x Watchdog timers, 2x Main System Watchdog
 *   Timer (MWDT), 1x RTC Watchdog Timer (RWDT). RWDT is not supported yet.
 */
#define DT_ESPRESSIF_ESP32_WATCHDOG_3FF5F048_BASE_ADDRESS 0x3ff5f048
#define DT_INST_0_ESPRESSIF_ESP32_WATCHDOG_BASE_ADDRESS DT_ESPRESSIF_ESP32_WATCHDOG_3FF5F048_BASE_ADDRESS
#define DT_ESPRESSIF_ESP32_WATCHDOG_3FF5F048_SIZE   32
#define DT_INST_0_ESPRESSIF_ESP32_WATCHDOG_SIZE     DT_ESPRESSIF_ESP32_WATCHDOG_3FF5F048_SIZE
/* Human readable string describing the device (used as device_get_binding() argument) */
#define DT_ESPRESSIF_ESP32_WATCHDOG_3FF5F048_LABEL  "WDT_0"
#define DT_INST_0_ESPRESSIF_ESP32_WATCHDOG_LABEL    DT_ESPRESSIF_ESP32_WATCHDOG_3FF5F048_LABEL
#define DT_INST_0_ESPRESSIF_ESP32_WATCHDOG          1

/*
 * Devicetree node:
 *   /soc/watchdog@3ff60048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * Dependency Ordinal: 19
 *
 * Requires:
 *   7   /soc
 *
 * Description:
 *   ESP32 watchdog. ESP32 contains 3x Watchdog timers, 2x Main System Watchdog
 *   Timer (MWDT), 1x RTC Watchdog Timer (RWDT). RWDT is not supported yet.
 *
 * Node is disabled.
 */

/* Compatibles appearing on enabled nodes */
#define DT_COMPAT_CADENCE_TENSILICA_XTENSA_LX6      1
#define DT_COMPAT_ESPRESSIF_ESP32                   1
#define DT_COMPAT_ESPRESSIF_ESP32_GPIO              1
#define DT_COMPAT_ESPRESSIF_ESP32_I2C               1
#define DT_COMPAT_ESPRESSIF_ESP32_PINMUX            1
#define DT_COMPAT_ESPRESSIF_ESP32_RTC               1
#define DT_COMPAT_ESPRESSIF_ESP32_TRNG              1
#define DT_COMPAT_ESPRESSIF_ESP32_UART              1
#define DT_COMPAT_ESPRESSIF_ESP32_WATCHDOG          1
#define DT_COMPAT_MMIO_SRAM                         1
#define DT_COMPAT_SIMPLE_BUS                        1

/* /chosen/zephyr,flash (missing) */
#define DT_FLASH_BASE_ADDRESS                       0
#define DT_FLASH_SIZE                               0

/* /chosen/zephyr,code-partition (missing) */
#define DT_CODE_PARTITION_OFFSET                    0
#define DT_CODE_PARTITION_SIZE                      0
